#!/usr/bin/env ruby

require 'uri'
require 'net/http'
require 'yaml'
require 'json'
require 'csv'
require 'oauth'
require 'optimist'
require 'colorize'

require 'grailbird_updater'

opts = Optimist::options do
    version "updater #{GrailbirdUpdater::VERSION}"
    banner <<-EOS
Update your Twitter archive (best if used with a cron)

Usage: updater [options] [path to archive]

Where [options] can be:
EOS

    opt :verbose, "Verbose mode"
    opt :prune, "Prune all but necessary user data from tweets", :default => true
    opt :csv_write, "Also write to CSV files in archive"
    opt :directory, "Twitter archive directory", :type => :string
    opt :key_path, "Alternate path to directory containing a YAML file with the app/user keys for the archive's account. Defaults to the archive directory", :type => :string
end

dir = nil
dir ||= opts[:directory]
dir ||= ARGV.first
dir ||= "."
raise ArgumentError, "Must specify a directory" unless File.directory?(dir)

key_path = opts[:key_path]
key_path ||= dir

raise ArgumentError, "#{key_path} is not a directory" unless File.directory?(key_path)
raise IOError, "#{key_path} is not readable" unless File.readable?(key_path)
raise IOError, "#{key_path} is not writable" unless File.writable?(key_path)

GrailbirdUpdater.new(dir, opts[:verbose], opts[:prune], key_path, opts[:csv_write]).update_tweets
